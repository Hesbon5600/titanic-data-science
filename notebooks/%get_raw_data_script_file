
from dotenv import load_dotenv, find_dotenv
import os
import requests
from requests import session
import logging

payload = {
    "action": "login",
    "username": os.getenv("KAGGLE_USERNAME"),
    "password": os.getenv("KAGGLE_PASSWORD")
}

def extract_data(url, file_path):
    """Extract data from the site"""
    with session() as c:
        # Open file to write
        with open(file_path, 'w') as handle:
            response = c.get(url, stream=True)
            for block in response.iter_content(1024):
                handle.write(block)


def main(project_dir):
    '''Main method'''
    
    # Get logger
    logger = logging.getLogger(__name__)
    logger.info('get raw data')
    
    # Urls
    train_url = 'https://www.kaggle.com/c/titanic/download/train.csv'
    test_url = 'https://www.kaggle.com/c/titanic/download/test.csv'

    # File paths
    raw_data_path = os.path.join(os.path.pardir,'data', 'raw')
    train_data_path = os.path.join(os.path.pardir,'train.csv')
    test_data_path = os.path.join(os.path.pardir,'test.csv')

    # extract data
    extract_data(train_url, train_data_path)
    extract_data(test_url, test_data_path)
    logger.info('downloaded raw test and training data')


if __name__ == '__main__':
    # getting root directory
    project_dir = os.path.join(os.path.dirname(__file__), os.pardir, os.pardir)
    
    # Setup the logger
    log_fmt = '%{asctime}s - %{name}s - %{levelname}s - %{message}s'
    logging.basicConfig(level=logging.info, format=log_fmt)
    
    # Find the .env automatically
    dotenv_path = find_dotenv()
    # Load up the entries as environment variables
    load_dotenv(dotenv_path)
    
    # call the main
    main(project_dir)
